#ifndef DODECAHEDRON_H
#define DODECAHEDRON_H

float mesh_positions[] = {
    -0.57735, -0.57735, 0.57735,
    0.934172, 0.356822, 0,
    0.934172, -0.356822, 0,
    -0.934172, 0.356822, 0,
    -0.934172, -0.356822, 0,
    0, 0.934172, 0.356822,
    0, 0.934172, -0.356822,
    0.356822, 0, -0.934172,
    -0.356822, 0, -0.934172,
    0, -0.934172, -0.356822,
    0, -0.934172, 0.356822,
    0.356822, 0, 0.934172,
    -0.356822, 0, 0.934172,
    0.57735, 0.57735, -0.57735,
    0.57735, 0.57735, 0.57735,
    -0.57735, 0.57735, -0.57735,
    -0.57735, 0.57735, 0.57735,
    0.57735, -0.57735, -0.57735,
    0.57735, -0.57735, 0.57735,
    -0.57735, -0.57735, -0.57735,
};

float mesh_colors[] = {
    0.8971539353345218, 0.5164637506917037, 0.7748942064820423,
    0.7573115044910336, 0.5797725539791502, 0.8571545802979919,
    0.27312744208424455, 0.0161795308859497, 0.6658779333136484,
    0.7967333755767126, 0.42231727099143346, 0.8820784016191722,
    0.6993681873869989, 0.5907079012712365, 0.9943715171203693,
    0.6867101615401149, 0.6450223473824849, 0.03853584721138004,
    0.0017203575608065735, 0.21636162275574133, 0.37919846409261904,
    0.9593991221560461, 0.5359476635028498, 0.644883934746728,
    0.18291629184451397, 0.7688638391606039, 0.7666341776573876,
    0.493622941732751, 0.49307042259277456, 0.8514472734979829,
    0.026479583051324362, 0.23867773849067986, 0.615139472617424,
    0.10194339160229815, 0.5909417533081565, 0.15990419993128968,
    0.5463367206833412, 0.7768099950615555, 0.6522738868014962,
    0.5986809100457537, 0.4458979545794164, 0.25800655707185893,
    0.765817561840892, 0.5788568608570018, 0.5856506566494024,
    0.8276467804904304, 0.9659086146153202, 0.8338598778381491,
    0.5793264865189482, 0.2730544032817084, 0.9327422189642434,
    0.6994508662730525, 0.16752021855965127, 0.7987718244082765,
    0.9686822892158811, 0.07510083021456415, 0.007786039520113808,
    0.21780328922201686, 0.9495217330826313, 0.633132988490268,
};

int mesh_indices[] = {
    18, 2, 1,
    11, 18, 1,
    14, 11, 1,
    7, 13, 1,
    17, 7, 1,
    2, 17, 1,
    19, 4, 3,
    8, 19, 3,
    15, 8, 3,
    12, 16, 3,
    0, 12, 3,
    4, 0, 3,
    6, 15, 3,
    5, 6, 3,
    16, 5, 3,
    5, 14, 1,
    6, 5, 1,
    13, 6, 1,
    9, 17, 2,
    10, 9, 2,
    18, 10, 2,
    10, 0, 4,
    9, 10, 4,
    19, 9, 4,
    19, 8, 7,
    9, 19, 7,
    17, 9, 7,
    8, 15, 6,
    7, 8, 6,
    13, 7, 6,
    11, 14, 5,
    12, 11, 5,
    16, 12, 5,
    12, 0, 10,
    11, 12, 10,
    18, 11, 10,
};

int n_mesh_indices = sizeof(mesh_indices) / sizeof(int);

int n_mesh_vertices = sizeof(mesh_positions) / (sizeof(float) * 3);

#endif

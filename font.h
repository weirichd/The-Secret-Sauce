#ifndef FONT_H
#define FONT_H

/*
 *  A font. Each letter uses only 3 bytes
 */ 
static unsigned char font[] = {
    // Free characters
    0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,
    0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,
    0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,
    0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,
    0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,
    0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,
    0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,
    0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xEE, 0xEE, 0x0E,

    0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,
    0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,
    0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,
    0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,
    0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,
    0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,
    0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,
    0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xEE, 0xEE, 0x0E,

    0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,
    0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,
    0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,
    0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,
    0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,
    0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,
    0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,
    0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xEE, 0xEE, 0x0E,

    0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,
    0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,
    0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,
    0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,
    0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,
    0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,
    0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,
    0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xAE, 0xAA, 0x0E,  0xEE, 0xEE, 0x0E,
};

static void render_character(char character, int *buffer, int x, int y, int width) {
    int offset = x + y * width;
    int ci = character * 3;
    for(int i = 0; i < 3; i++) {
        if(font[ci + i] & 1)      buffer[offset] = 0xFFFFFFFF;
        if(font[ci + i] & 1 << 1) buffer[offset + 1] = 0xFFFFFFFF;
        if(font[ci + i] & 1 << 2) buffer[offset + 2] = 0xFFFFFFFF;
        if(font[ci + i] & 1 << 3) buffer[offset + 3] = 0xFFFFFFFF;
        if(font[ci + i] & 1 << 4) buffer[offset + width] = 0xFFFFFFFF;
        if(font[ci + i] & 1 << 5) buffer[offset + width + 1] = 0xFFFFFFFF;
        if(font[ci + i] & 1 << 6) buffer[offset + width + 2] = 0xFFFFFFFF;
        if(font[ci + i] & 1 << 7) buffer[offset + width + 3] = 0xFFFFFFFF;
        offset += width * 2;
    }
}

#endif
